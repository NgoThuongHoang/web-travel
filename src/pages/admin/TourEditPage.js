import React, { useState } from "react";
import { Layout, Input, Button, Card, Typography, Row, Col, Carousel } from "antd";
import {
  CalendarOutlined,
  ClockCircleOutlined,
  TeamOutlined,
  EnvironmentOutlined,
} from "@ant-design/icons";
import TourEditForm from "../../components/TourEditForm";
import "../../styles/TourEditPage.css";

const { Content } = Layout;
const { Title, Text } = Typography;

const TourEditPage = () => {
  const [tourLink, setTourLink] = useState("");
  const [tourData, setTourData] = useState(null);
  const [previewData, setPreviewData] = useState(null);

  const fetchTourData = async (link) => {
    const mockData = {
      title: "HCM - Ninh B√¨nh ‚Äì Sapa",
      duration: "3 NG√ÄY",
      departureDate: "02/08",
      transportation: "M√ÅY BAY",
      departurePoint: "TP HCM",
      price: "Li√™n h·ªá",
      highlights: [
        "Kh√°m ph√° Th·ªß ƒë√¥ H√† N·ªôi v·ªõi: VƒÉn Mi·∫øu Qu·ªëc T·ª≠ Gi√°m, Qu·∫£ng Tr∆∞·ªùng Ba ƒê√¨nh, B·∫£o t√†ng H·ªì Ch√≠ Minh, Nh√† s√†n, Ch√πa M·ªôt C·ªôt.",
        "ThƒÉm quan V·ªãnh H·∫° Long - K·ª≥ quan thi√™n nhi√™n th·∫ø gi·ªõi.",
        "Th∆∞·ªüng th·ª©c nh·ªØng m√≥n ƒÉn ƒë·∫∑c s·∫£n t∆∞∆°i ngon tr√™n Du thuy·ªÅn H·∫° Long.",
        "Ch√≤ng ch√†nh non n∆∞·ªõc Ninh B√¨nh di s·∫£n th·∫ø gi·ªõi B√°i ƒê√≠nh - Tr√†ng An.",
        "Chi√™m ng∆∞·ª°ng n√©t ƒë·∫πp th∆° m·ªông, tr·ªØ t√¨nh c·ªßa Sapa, kh√°m ph√° s·∫Øc m√†u vƒÉn ho√° v√πng cao.",
      ],
      itinerary: [
        {
          day_number: 1,
          title: "TP.HCM - ƒê√Ä N·∫¥NG",
          details: {
            morning: "Bay t·ª´ TP.HCM ƒë·∫øn ƒê√† N·∫¥NG - B√Ä N√Ä HILLS",
            afternoon: "",
            evening: "",
          },
        },
      ],
      images: [
        {
          url: "/images/images_tour/anh_tour_viet_nam/ba-na1-2013.jpg",
          thumbUrl: "/images/images_tour/anh_tour_viet_nam/ba-na1-2013.jpg",
        },
        {
          url: "/images/images_tour/anh_tour_viet_nam/ban-cat-cat-4139-1775.jpg",
          thumbUrl: "/images/images_tour/anh_tour_viet_nam/ban-cat-cat-4139-1775.jpg",
        },
        {
          url: "/images/images_tour/anh_tour_viet_nam/chua-bai-dinh-2071-3727.png",
          thumbUrl: "/images/images_tour/anh_tour_viet_nam/chua-bai-dinh-2071-3727.png",
        },
      ],
    };

    return new Promise((resolve) => {
      setTimeout(() => resolve(mockData), 1000);
    });
  };

  const handleLoadTour = async () => {
    if (!tourLink) {
      return; // Kh√¥ng hi·ªÉn th·ªã l·ªói v√¨ ƒë√£ b·ªè message
    }

    try {
      const data = await fetchTourData(tourLink);
      setTourData(data);
      setPreviewData(null); // ·∫®n xem tr∆∞·ªõc khi t·∫£i tour m·ªõi
    } catch (error) {
      // Kh√¥ng hi·ªÉn th·ªã l·ªói v√¨ ƒë√£ b·ªè message
    }
  };

  const handlePreview = (values) => {
    setPreviewData(values);
  };

  const handleSave = (values) => {
    setTourData(values);
    setPreviewData(null); // ·∫®n xem tr∆∞·ªõc sau khi l∆∞u
    // Kh√¥ng c·∫ßn th√¥ng b√°o message n·ªØa, modal th√†nh c√¥ng ƒë∆∞·ª£c x·ª≠ l√Ω trong TourEditForm
  };

  return (
    <Layout className="tour-edit-page">
      <Content>
        <Card title="Nh·∫≠p link tour c·∫ßn s·ª≠a" style={{ marginBottom: 16 }}>
          <Input
            placeholder="Nh·∫≠p link tour..."
            value={tourLink}
            onChange={(e) => setTourLink(e.target.value)}
            style={{ marginBottom: 16 }}
          />
          <Button type="primary" onClick={handleLoadTour}>
            T·∫£i tour
          </Button>
        </Card>

        {tourData && (
          <TourEditForm
            initialValues={tourData}
            onPreview={handlePreview}
            onSave={handleSave}
          />
        )}

        {previewData && (
          <Card title="Xem tr∆∞·ªõc tour" style={{ marginTop: 16 }}>
            <Title level={2}>{previewData.title}</Title>
            <Row gutter={16}>
              <Col span={12}>
                <Text>
                  <CalendarOutlined /> Th·ªùi gian: {previewData.duration}
                </Text>
              </Col>
              <Col span={12}>
                <Text>
                  <ClockCircleOutlined /> Kh·ªüi h√†nh: {previewData.departureDate}
                </Text>
              </Col>
            </Row>
            <Row gutter={16}>
              <Col span={12}>
                <Text>
                  <TeamOutlined /> Ph∆∞∆°ng ti·ªán: {previewData.transportation}
                </Text>
              </Col>
              <Col span={12}>
                <Text>
                  <EnvironmentOutlined /> ƒêi·ªÉm kh·ªüi h√†nh: {previewData.departurePoint}
                </Text>
              </Col>
            </Row>
            <Row gutter={16}>
              <Col span={12}>
                <Text>
                  <span role="img" aria-label="money">üí∞</span> Gi√°: {previewData.price || "Li√™n h·ªá"}
                </Text>
              </Col>
            </Row>

            <Carousel autoplay>
              {previewData.images.map((image, index) => (
                <div key={index}>
                  <img src={image.url} alt={`·∫¢nh tour ${index + 1}`} style={{ width: "100%" }} />
                </div>
              ))}
            </Carousel>

            <Title level={3}>L·ªãch tr√¨nh</Title>
            {previewData.itinerary.map((day, index) => (
              <Card key={index} title={`Ng√†y ${day.day_number}: ${day.title}`} style={{ marginBottom: 16 }}>
                <Text strong>Bu·ªïi s√°ng:</Text>
                <Text>{day.details.morning}</Text>
                <br />
                <Text strong>Bu·ªïi tr∆∞a:</Text>
                <Text>{day.details.afternoon}</Text>
                <br />
                <Text strong>Bu·ªïi t·ªëi:</Text>
                <Text>{day.details.evening}</Text>
              </Card>
            ))}
          </Card>
        )}
      </Content>
    </Layout>
  );
};

export default TourEditPage;